{"version":3,"file":"static/js/903.9f2fb3a6.chunk.js","mappings":"8OAEaA,E,OAAOC,GAAAA,GAAH,4G,SCAJC,EAAU,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OAAc,SAAC,EAAD,UAASA,GAAvB,E,2BC8CvB,EAtCiB,WACf,OAAoBC,EAAAA,EAAAA,KAAbC,GAAP,eACA,GAAwCC,EAAAA,EAAAA,UAAS,IAAjD,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KAsBA,OApBAC,EAAAA,EAAAA,YAAU,WACRD,GAAa,GACb,IAAME,EAAiB,mCAAG,wGAEhBC,EAAWR,EAAUS,KAAI,SAAAC,GAAE,OAAIC,EAAAA,EAAAA,GAAkBD,EAAtB,IAFX,SAGEE,QAAQC,IAAIL,GAHd,OAGhBM,EAHgB,OAIhBC,EAAYD,EAAUL,KAAI,SAAAO,GAAQ,OAAIA,EAASC,IAAb,IAExCd,EAAgBY,GANM,gDAQtBG,QAAQC,MAAM,uBAAd,MARsB,yBAUtBd,GAAa,GACbe,EAAAA,QAAAA,SAXsB,4EAAH,qDAevBb,GACD,GAAE,CAACP,KAGF,iCACE,SAACqB,EAAA,EAAD,KACA,UAACC,EAAA,EAAD,WACGlB,GAAagB,EAAAA,QAAAA,SACZpB,EAAUuB,SACV,SAAC1B,EAAD,CAASC,KAAK,0CAEfE,EAAUuB,OAAS,IAAK,SAACC,EAAA,EAAD,CAAaP,KAAMf,SAInD,C","sources":["component/Message/Message.styled.js","component/Message/Message.js","pages/Favorite.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Text = styled.h2`\n  font-size: 32px;\n  font-weight: 600;\n  padding: 20px 0;\n  text-align: center;\n`;\n","import * as s from './Message.styled';\n\nexport const Message = ({ text }) => <s.Text>{text}</s.Text>;\n","import { useState, useEffect } from 'react';\nimport { getCarByIdCatalog } from 'api/adverts';\nimport { Section } from 'component/Section/Section';\nimport { ListCatalog } from 'component/ListCatalog/ListCatalog';\nimport { Message } from 'component/Message/Message';\nimport { Loading } from 'notiflix/build/notiflix-loading-aio';\nimport { useFavorites } from 'hooks/useFavorites';\n\nimport { Filter } from '../component/Filter/Filter';\n\nconst Favorite = () => {\n  const [favorites] = useFavorites();\n  const [favoriteCars, setFavoriteCars] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    setIsLoading(true);\n    const fetchFavoriteCars = async () => {\n      try {\n        const promises = favorites.map(id => getCarByIdCatalog(id));\n        const responses = await Promise.all(promises);\n        const validCars = responses.map(response => response.data);\n\n        setFavoriteCars(validCars);\n      } catch (error) {\n        console.error('Error fetching cars:', error);\n      } finally {\n        setIsLoading(false);\n        Loading.remove();\n      }\n    };\n\n    fetchFavoriteCars();\n  }, [favorites]);\n\n  return (\n    <>\n      <Filter />\n      <Section>\n        {isLoading && Loading.pulse()}\n        {!favorites.length && (\n          <Message text=\"You don't have any favorite cars yet!\" />\n        )}\n        {favorites.length > 0 && <ListCatalog data={favoriteCars} />}\n      </Section>\n    </>\n  );\n};\nexport default Favorite;\n"],"names":["Text","styled","Message","text","useFavorites","favorites","useState","favoriteCars","setFavoriteCars","isLoading","setIsLoading","useEffect","fetchFavoriteCars","promises","map","id","getCarByIdCatalog","Promise","all","responses","validCars","response","data","console","error","Loading","Filter","Section","length","ListCatalog"],"sourceRoot":""}